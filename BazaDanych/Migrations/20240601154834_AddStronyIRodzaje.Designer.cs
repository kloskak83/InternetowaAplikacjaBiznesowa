// <auto-generated />
using System;
using BazaDanych.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BazaDanych.Migrations
{
    [DbContext(typeof(BazaContext))]
    [Migration("20240601154834_AddStronyIRodzaje")]
    partial class AddStronyIRodzaje
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BazaDanych.Data.CMS.Aktualnosc", b =>
                {
                    b.Property<int>("AktualnosciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AktualnosciId"));

                    b.Property<DateOnly>("DataAktualnosci")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naglowek")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SciezkaDoZdjecia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AktualnosciId");

                    b.ToTable("Aktualnosci");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Pojazd", b =>
                {
                    b.Property<int>("IdPojazd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPojazd"));

                    b.Property<bool>("CzyMaABS")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyMaCentralnyZamek")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyMaElektryczneLusterka")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyMaElektryczneSzyby")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyMaKlimatyzacje")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyMaKomputerPokladowy")
                        .HasColumnType("bit");

                    b.Property<bool>("CzyMaPodgrzewaneLusterka")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("DataProdukcji")
                        .HasColumnType("date");

                    b.Property<int>("IdSegmentPojazdu")
                        .HasColumnType("int");

                    b.Property<int>("IdSlownikMarka")
                        .HasColumnType("int");

                    b.Property<int>("IdTypSilnika")
                        .HasColumnType("int");

                    b.Property<int>("IdTypSkrzyniBiegow")
                        .HasColumnType("int");

                    b.Property<int>("IloscDrzwi")
                        .HasColumnType("int");

                    b.Property<int>("IloscPoduszek")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("MocSilnika")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NazwaWSerwisie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OpisPojazdu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PojemnoscSilnika")
                        .HasColumnType("real");

                    b.Property<string>("SciezkaDoZdjecia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SpalanieMiejskie")
                        .HasColumnType("real");

                    b.HasKey("IdPojazd");

                    b.HasIndex("IdSegmentPojazdu");

                    b.HasIndex("IdSlownikMarka");

                    b.HasIndex("IdTypSilnika");

                    b.HasIndex("IdTypSkrzyniBiegow");

                    b.ToTable("Pojazdy");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.PojazdSlCechaPojazdu", b =>
                {
                    b.Property<int>("PojazdyId")
                        .HasColumnType("int");

                    b.Property<int>("SlCechyPojazdowId")
                        .HasColumnType("int");

                    b.HasKey("PojazdyId", "SlCechyPojazdowId");

                    b.HasIndex("SlCechyPojazdowId");

                    b.ToTable("PojazdSlCechaPojazdu");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlCechaPojazdu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CechaPojazdu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SlCechyPojazdow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlMarka", b =>
                {
                    b.Property<int>("IdSlMarka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSlMarka"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MarkaPojazdu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSlMarka");

                    b.ToTable("SlMarkiPojazdow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlSegmentPojazdu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NazwaSegmentuPojazdu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SlSegmentyPojazdow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlTypSilnika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NazwaTypuSilnika")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SlTypySilnikow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlTypSkrzyniBiegow", b =>
                {
                    b.Property<int>("IdSlTypSkrzyniBiegow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSlTypSkrzyniBiegow"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NazwaTypuSkrzyniBiegow")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSlTypSkrzyniBiegow");

                    b.ToTable("SlTypySkrzyniBiegow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Uzytkownicy.SlTypUzytkownika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NazwaUprawnienia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OpisUprawnieniaUzytkownika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SlTypUzytkownik");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Uzytkownicy.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirmaAdres")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirmaKodPocztowy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirmaMiasto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirmaNazwa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirmaNip")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("IdSlTypUzytkownika")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KorespondencyjnyAdres")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("KorespondencyjnyMiasto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("KoresponedncyjnyKodPocztowy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nazwisko")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TelefonKontaktowy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ZamieszkanieAdres")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ZamieszkanieKodPoczotwy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ZamieszkanieMiasto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdSlTypUzytkownika");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("BazaDanych.Data.Portal.SlRodzajeStron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RodzejStron");
                });

            modelBuilder.Entity("BazaDanych.Data.Portal.Strona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSlRodzajeStron")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdSlRodzajeStron");

                    b.ToTable("Strony");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Pojazd", b =>
                {
                    b.HasOne("BazaDanych.Data.CMS.SlSegmentPojazdu", "SlSegmentPojazdu")
                        .WithMany("Pojazdy")
                        .HasForeignKey("IdSegmentPojazdu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaDanych.Data.CMS.SlMarka", "SlMarka")
                        .WithMany("Pojazdy")
                        .HasForeignKey("IdSlownikMarka")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaDanych.Data.CMS.SlTypSilnika", "SlTypSilnika")
                        .WithMany("Pojazdy")
                        .HasForeignKey("IdTypSilnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaDanych.Data.CMS.SlTypSkrzyniBiegow", "SlTypSkrzyniBiegow")
                        .WithMany("Pojazdy")
                        .HasForeignKey("IdTypSkrzyniBiegow")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SlMarka");

                    b.Navigation("SlSegmentPojazdu");

                    b.Navigation("SlTypSilnika");

                    b.Navigation("SlTypSkrzyniBiegow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.PojazdSlCechaPojazdu", b =>
                {
                    b.HasOne("BazaDanych.Data.CMS.Pojazd", "Pojazd")
                        .WithMany("PojazdySlCechyPojazdow")
                        .HasForeignKey("PojazdyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaDanych.Data.CMS.SlCechaPojazdu", "SlCechaPojazdu")
                        .WithMany("PojazdySlCechyPojazdow")
                        .HasForeignKey("SlCechyPojazdowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pojazd");

                    b.Navigation("SlCechaPojazdu");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Uzytkownicy.Uzytkownik", b =>
                {
                    b.HasOne("BazaDanych.Data.CMS.Uzytkownicy.SlTypUzytkownika", "SlTypUzytkownika")
                        .WithMany("Uzytkownicy")
                        .HasForeignKey("IdSlTypUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SlTypUzytkownika");
                });

            modelBuilder.Entity("BazaDanych.Data.Portal.Strona", b =>
                {
                    b.HasOne("BazaDanych.Data.Portal.SlRodzajeStron", "SlRodzajeStron")
                        .WithMany("Strony")
                        .HasForeignKey("IdSlRodzajeStron")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SlRodzajeStron");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Pojazd", b =>
                {
                    b.Navigation("PojazdySlCechyPojazdow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlCechaPojazdu", b =>
                {
                    b.Navigation("PojazdySlCechyPojazdow");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlMarka", b =>
                {
                    b.Navigation("Pojazdy");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlSegmentPojazdu", b =>
                {
                    b.Navigation("Pojazdy");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlTypSilnika", b =>
                {
                    b.Navigation("Pojazdy");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.SlTypSkrzyniBiegow", b =>
                {
                    b.Navigation("Pojazdy");
                });

            modelBuilder.Entity("BazaDanych.Data.CMS.Uzytkownicy.SlTypUzytkownika", b =>
                {
                    b.Navigation("Uzytkownicy");
                });

            modelBuilder.Entity("BazaDanych.Data.Portal.SlRodzajeStron", b =>
                {
                    b.Navigation("Strony");
                });
#pragma warning restore 612, 618
        }
    }
}
